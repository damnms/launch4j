/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'distribution'
    id 'application'
    id 'maven-publish'
    id("com.gradleup.shadow") version "9.0.0-beta13"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://simulation.tudelft.nl/maven/')
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://repo.jenkins-ci.org/public/')
    }
}

dependencies {
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation "commons-logging:commons-logging:1.2"
    implementation("net.java.abeille:abeille:3.0") {
        exclude group: "org.apache.batik", module: "com.springsource.org.apache.batik.ext.awt"
    }
    implementation "com.jgoodies:jgoodies-common:1.8.1"
    implementation "com.jgoodies:forms:1.2.1"
    implementation "com.formdev:flatlaf:1.6.5"
    implementation "com.thoughtworks.xstream:xstream:1.4.20"
    implementation "org.apache.ant:ant:1.10.15"
}

group = 'net.sf.launch4j'
version = '3.51'
description = 'Launch4j'
java.sourceCompatibility = JavaVersion.VERSION_1_8

jar {
    manifest {
        attributes 'Main-Class': 'net.sf.launch4j.Main'
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

distributions {
    bin_linux64 {
        distributionBaseName = project.name+"-linux64"
        contents {
            // Copy the following jars to the lib/ directory in the distribution archive
            from shadowJar
            into('w32api') {
                from fileTree('w32api')
            }
            into('w32api_jni') {
                from fileTree('w32api_jni')
            }
            into('head_jni_BETA') {
                from fileTree('head_jni_BETA')
            }
            into('head') {
                from fileTree('head')
            }
            into('bin') {
                from fileTree('bin/bin-linux64')
            }
        }
    }
}

tasks.shadowJar {
    mainClassName = "net.sf.launch4j.Main"
    archiveClassifier = null
}

tasks.bin_linux64DistZip {
    dependsOn shadowJar
}